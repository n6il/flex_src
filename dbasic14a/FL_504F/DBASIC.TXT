 NAM DBASIC.CMD 1.5 - 5.0:4 - 5/1/83 RH
 STTL RUNS DISK EXTENDED COLOR BASIC UNDER FHL FLEX
 PAG
 OPT PAG
* COPYRIGHT 1982 THOMAS S. SPEER
* MODIFIED 5/1/1983 R. HOGG - DISALLOW USE FROM IMPROPER
*   MODES OF FLEX

* DBASIC COPIES THE COLOR BASIC, EXTENDED COLOR BASIC,
* AND DISK CONTROLLER ROM TO RAM, RELOCATING THE DISK CODE
* TO KEEP IT FROM DESTROYING FLEX. 
* IT THEN LOADS A BINARY FILE OF PATCHES
* TO THE ROM TO MODIFY THE INITIALIZATION AND
* MODIFIES ALL ADDRESSES CHANGED BY THE RELOCATION.
* IT ALSO MODIFIES THE DISK RELATED COMMANDS TO WORK WITH
* FLEX FORMATTED DISKS AND FILES, ELIMINATING SOME OF THE 
* BASIC COMMANDS SUCH AS BACKUP AND DSKINI.

* BASIC IS COLDSTARTED AFTER PATCHING. FLEX MAY BE
* REENTERED BY TYPING "FLEX" 

* FLEX EQUATES

OFFSET EQU $CC1B
SYSFCB EQU $C840
WARMS EQU $CD03
OUTCH EQU $CD0F
OUTCH2 EQU $CD12
FMS EQU $D406
LOAD EQU $CD30
PSTRNG EQU $CD1E
RPTERR EQU $CD3F
MTROFF EQU $DE21
TINIT EQU $D3F5
HOLD EQU $F5FE
HOLDB EQU $F600
SAVEB EQU $B800
SAVEND EQU $C000
MEMEND EQU $CC2B
HRCADR EQU $DDFC
* BASIC EQUATES
 
MOVE EQU $A59A
RESETA EQU $A027
 
* SAM EQUATES

ROMMAP EQU $FFDE
RAMMAP EQU $FFDF


 ORG $0
DBASIC BRA DBAS0
VN FCB 4
DBAS0
 LDX MEMEND CHECK IF MODE IS PROPER
 LEAX 1,X
 CMPX HRCADR
 BNE DBAS01
 CMPX #SAVEB
 BEQ DBAS1
DBAS01
 LDX #CNTMSG
 JSR PSTRNG
 JMP WARMS


DBAS1 ORCC #$50 DISABLE INTERRUPTS
 LDS #$7FFF MOVE STACK OUT OF THE WAY
 LEAX MSG1,PCR WRITE A MESSAGE
 JSR PSTRNG
 LDX OUTCH+1
 STX HOLD SAVE OUTPUT VECTOR
 LDX #$A30A OUTPUT TO SCREEN
 STX OUTCH+1
 STX OUTCH2+1

 LDX #SAVEB SAVE FLEX CODE BELOW $C000
 LDY #HOLDB USED BY HIRES I/O
MOVRAM LDA ,X+
 STA ,Y+
 CMPX #SAVEND
 BNE MOVRAM
 
 LEAY MEMTBL,PCR POINT TO MEMORY MAP TABLE
* MOVE ROM TO RAM

MOVROM LDX 0,Y X = ROM ADDRESS TO COPY FROM
 LDU 4,Y U = RAM ADDRESS TO COPY TO
MOVELP  STA ROMMAP ENABLE ROM
 LDA 0,X+ GET BYTE FROM ROM
 STA RAMMAP ENABLE RAM
 STA 0,U+ PUT BYTE INTO RAM
 CMPX 2,Y LOOP UNTIL END ROM ADDRESS
 BLS MOVELP
 LEAY 6,Y POINT TO NEXT TABLE ENTRY
 LDD 0,Y CHECK FOR END OF TABLE
 BNE MOVROM


* LOAD OVERLAY FILE

 LDU #SYSFCB+4 POINT TO FCB
 LEAX FILNAM,PCR
 LDB #11
 JSR MOVE PUT FILE NAME INTO FCB
 
 LDD #0
 STD OFFSET CLEAR OFFSET
 LDX #SYSFCB POINT TO FCB
 LDAA #1 OPEN FILE FOR READ
 STAA 0,X
 JSR FMS
 BNE LOAD7 ERRORS?
 LDAA #$FF SET FOR BINARY
 STAA 59,X
 JSR LOAD LOAD OVERLAY FILE

* COLDSTART BASIC

 JSR MTROFF TURN MOTORS OFF
 JMP RESETA ENTER RESET ENTRY POINT OF BASIC

* ERROR HANDLING
 
LOAD7 LEAX ERRMSG,PCR UNABLE TO FIND OVERLAY FILE
 JSR PSTRNG PRINT STRING
 LDX #SYSFCB
 JSR RPTERR REPORT ERROR
 JMP WARMS RETURN TO FLEX

* STRINGS

CNTMSG FCC 'CANNOT BE RUN FROM THIS MODE',4

ERRMSG FCC 'UNABLE TO OPEN DBASIC.SYS',4

MSG1 FCC 2,$14,32+14,32+5,'PLEASE STANDBY - PATCHING BASIC',4

FILNAM 
 FCC 'DBASIC',0,0,'SYS'

MEMTBL FDB $8000,$BFFF,$8000 BASIC AND EXTENDED BASIC
 FDB $C000,$C0A3,$C000 DISK INITILIZATION
 FDB $C0A6,$C0B2,$C0AF
 FDB $C0B3,$C0C1,$C0C1
 FDB $C0C4,$C0CB,$C0D0
 FDB $C0F6,$C17E,$C0F6
 FDB $C17F,$C299,$E600
 FDB $C334,$C338,$E71C
 FDB $C426,$C480,$E721
 FDB $C49B,$C4A6,$E790
 FDB $C50B,$C50C,$E7C1
 FDB $C50F,$C513,$E7C7
 FDB $C55E,$C565,$E7D8
 FDB $C58F,$C5A4,$E7E2
 FDB $C6C5,$C6C7,$E843
 FDB $C714,$C724,$E855
 FDB $C7FE,$C87A,$E866
 FDB $C884,$C9BD,$E909
 FDB $C9C5,$C9CF,$EA59
 FDB $C9DA,$CA61,$EA6B
 FDB $CB4A,$CB6C,$EAFE
 FDB $CBEB,$CBF1,$EB47
 FDB $CC02,$CC07,$EB7E
 FDB $CC3D,$CC43,$EBC9
 FDB $CC5B,$CD02,$EBD0
 FDB $CD18,$CD35,$EC7C
 FDB $CD3A,$CD5C,$EC9F
 FDB $CDC0,$CDC9,$ECCF
 FDB $CDE9,$CEA9,$ECFC
 FDB $CEAE,$CEB4,$EDBE
 FDB $CEBF,$CEC7,$EDEF
 FDB $CED0,$CEEB,$EE00
 FDB $CEF6,$CF09,$EE22
 FDB $CF12,$CF1D,$EE42
 FDB $CF1E,$CF3E,$EE59
 FDB $CF63,$CF6D,$EE90
 FDB $CF75,$CF7C,$EEAA
 FDB $CF8A,$D0CE,$EEB2
 FDB $D0CF,$D174,$EFFE
 FDB $D1E5,$D20E,$F0A4
 FDB $D3FF,$D4A0,$F0CE
 FDB $D616,$D61A,$F188
 FDB $D65B,$D66B,$F18D
 FDB $D7BB,$D7CE,$F19E
 FDB $D7DA,$D7DC,$F1B5
 FDB 0 END OF TABLE

 END DBASIC
